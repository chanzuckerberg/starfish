primary_image = file_inputs[0]
dots = file_inputs[1]
nuclei = file_inputs[2]
codebook = file_inputs[3]

max_proj = compute(
    Filter.MaxProject,
    primary_image,
    dims=['c', 'z'])

transformation_list = compute(
    LearnTransform.Translation,
    max_proj,
    reference_stack=dots, upsampling=1000, axes=Axes.ROUND)

transformed = compute(
    ApplyTransform.Warp,
    primary_image,
    transformation_list)

filtered_primary = compute(
    Filter.WhiteTophat,
    transformed,
    masking_radius=15)

filtered_nuclei = compute(
    Filter.WhiteTophat,
    nuclei,
    masking_radius=15)

filtered_dots = compute(
    Filter.WhiteTophat,
    dots,
    masking_radius=15)

spots = compute(
    DetectSpots.BlobDetector,
    filtered_primary, filtered_dots, {Axes.ROUND, Axes.CH},
    min_sigma=4, max_sigma=6, num_sigma=20, threshold=0.01)

segmentation = compute(
    Segment.Watershed,
    filtered_primary, filtered_nuclei,
    nuclei_threshold=.16, input_threshold=.22, min_distance=57)

target_assignment = compute(
    AssignTargets.Label,
    segmentation, spots)

decoded = compute(
    Decode.PerRoundMaxChannel,
    target_assignment,
    codebook=codebook)

file_outputs[0] = decoded
