language: python
env:
  global:
    - STARFISH_CONFIG=@$TRAVIS_BUILD_DIR/.travis-config.json
services:
- docker
python:
- 3.6
dist: trusty
stages:
- test
jobs:
  include:
    - name: Syntax and Fast Tests
      if: type != cron
      script: make install-dev fast
      after_success:
        - bash <(curl -s https://codecov.io/bash)
    - name: Slow Tests
      if: type != cron
      script: make install-dev && make -j check-notebooks slow-test
      after_success:
        - bash <(curl -s https://codecov.io/bash)
    - name: Fast Tests (Windows)
      if: type = push and (branch = master or branch =~ /-alltest/)
      os: windows
      language: sh
      python: "3.6"
      before_install:
        - choco install python3 --version 3.6.8
        - choco install make
        - export PATH="/c/Python36:/c/Python36/Scripts:$PATH"
        - python -m pip install --upgrade pip wheel
      script:
        - make install-dev fast-test
      after_success:
        - bash <(curl -s https://codecov.io/bash)
    - name: Slow Tests (Windows)
      if: type = push and (branch = master or branch =~ /-alltest/)
      os: windows
      language: sh
      python: "3.6"
      before_install:
        - choco install python3 --version 3.6.8
        - choco install make
        - export PATH="/c/Python36:/c/Python36/Scripts:$PATH"
        - python -m pip install --upgrade pip wheel
      script:
        - make install-dev slow-test
      after_success:
        - bash <(curl -s https://codecov.io/bash)
    - name: Install Napari
      if: type = push and (branch = master or branch =~ /-alltest/)
      script: pip install .[napari]
    - name: Docker
      if: type = push and (branch = master or branch =~ /-alltest/)
      script: make docker
    - name: smFISH Notebook
      if: type = push and (branch = master or branch =~ /-alltest/)
      script: travis_wait make install-dev notebooks/py/smFISH.py
    - name: MERFISH Notebook
      if: type = push and (branch = master or branch =~ /-alltest/)
      script: travis_wait make install-dev notebooks/py/MERFISH.py
    - name: osmFISH Notebook
      if: type = push and (branch = master or branch =~ /-alltest/)
      script: make install-dev notebooks/py/osmFISH.py
    - name: DARTFISH Notebook
      if: type = push and (branch = master or branch =~ /-alltest/)
      script: make install-dev notebooks/py/DARTFISH.py
    - name: Simulation Notebook
      if: type = push and (branch = master or branch =~ /-alltest/)
      script: make install-dev notebooks/py/Starfish_simulation.py
    - name: ISS Notebook
      if: type = push and (branch = master or branch =~ /-alltest/)
      script: make install-dev notebooks/py/ISS.py
    - name: BaristaSeq Notebook
      if: type = push and (branch = master or branch =~ /-alltest/)
      script: make install-dev notebooks/py/BaristaSeq.py
    - name: SeqFISH Notebook
      if: type = push and (branch = master or branch =~ /-alltest/)
      script: make install-dev notebooks/py/SeqFISH.py
#    - name: STARmap Notebook
#      if: type = push and (branch = master or branch =~ /-alltest/)
#      script: make install-dev notebooks/py/STARmap.py
    - name: 3D smFISH data processing example
      if: type = push and (branch = master or branch =~ /-alltest/)
      script: make install-dev 3d_smFISH.py
    - name: iss_pipeline.py data processing example
      if: type = push and (branch = master or branch =~ /-alltest/)
      script: make TESTING=1 install-dev iss_pipeline.py
    - name: Released Notebooks
      if: type = cron and (branch = master or branch =~ /-alltest/)
      script: make check-notebooks install-released-notebooks-support run-notebooks
cache:
  directories:
  - $HOME/.cache/pip
  - $HOME/.starfish/cache
notifications:
  slack:
    secure: Za1Zbbx/SE0qeRZxoRtheMeOmRawhUF0TCM18wU627bEWIPjxKgVETrgu/eLnANi003dToIVDQJ2XMWhNFADbvw0fTnnbekksvOAeWo0LxOlIW6T5rSQJQ3l301dKZ0AmGryM8qonPoztS4MJtDbGvThNI6u4wDSQfqiHk2qkohCNgx1xbMgU704CZ795q/2Gua0G1QABwElbbHhWa4HBN/eXX5+nYNo25JcG+DsnKheHPgTTWzzrXVAsjSa4LmRDmJWNn1hdG9QpVs2jcZjcs2WtFzpJt5N+A6MMtW4StsKh/b8QU7LMDhBOGT0H4fnGA8fu5UV9QNT6W0h8KhSBVtsCBzbLKN/6NzZ8vXZ3a/n+h3nWRw2A+8/txWcIAjlO/GT22UJs5uawmHmAC58PZcDbiD4ha1VUD6MKmqpNThOg4NZSBPcj9NplK1f7hBRkSY2bW9aY1WdY7IbqwV4vmfxm6fHwanAkJpd2tFXOT3pMuaHBaN01BNmrY4lfjL6dn3kErmaPV14Sw55ue/kDBwZ2nBkOWkjfTB72WB1inn2zig81BRmJT7gUEXRnGETVPI+HjqXqtK8nAQGD423hBmnLvk7RZ9PkhC9CClwmLUbXLlFHC48CrsucUAkEFxc6ApNwxu8E9Q7gJZnxFEWKkAPf2sexF9o/iHZPssVtYM=
    on_success: change
